!function(){"use strict";angular.module("ua.security",[]).config(["$httpProvider",function(a){a.interceptors.push("authenticationInterceptor")}]),angular.module("ua.security").factory("authenticationInterceptor",["$injector","$q",function(a,b){return{request:function(c){return a.invoke(["securityService",function(a){a.isAuthenticated()?c.headers[a.getAuthTokenHeader()]=a.getCurrentUser().token:delete c.headers[a.getAuthTokenHeader()]}]),c||b.when(c)}}}]),angular.module("ua.security").provider("userStorageService",function(){function a(a){this.storeUser=function(b){a.sessionStorage.setItem("ua-user",b)},this.retrieveUser=function(){return a.sessionStorage.getItem("ua-user")},this.deleteUser=function(){a.sessionStorage.removeItem("ua-user")}}this.$get=["$window",function(b){return new a(b)}]}),angular.module("ua.security").provider("authenticationService",[function(){function a(a,d){this.authenticate=function(c,e){var f=d.defer(),g={username:c,password:e};return a.post(b,g).success(function(a){return f.resolve(a)}).error(function(a,b){return f.reject(b)}),f.promise},this.logout=function(){var b=d.defer();return a.post(c).success(function(a){b.resolve(a)}).error(function(a,c){b.reject(c)}),b.promise}}var b="/login";this.setAuthenticationUrl=function(a){b=a};var c="/logout";this.setLogoutUrl=function(a){c=a},this.$get=["$http","$q",function(b,c){return new a(b,c)}]}]),angular.module("ua.security").provider("securityService",function(){function a(a,c){function d(a){return Array.isArray(a)||(a=a.replace(/\s+/g,"").split(",")),a}var e={username:"",roles:[]};this.getCurrentUser=function(){return c.retrieveUser()||e},this.getAuthTokenHeader=function(){return b},this.login=function(b,d){return a.authenticate(b,d).then(function(a){return c.storeUser(a),a},function(){c.deleteUser()})},this.logout=function(){return a.logout().then(function(){c.deleteUser()})},this.isAuthenticated=function(){return this.getCurrentUser()!==e},this.isAnonymous=function(){return this.getCurrentUser()===e},this.hasAllRoles=function(a){a=d(a);var b=this.getCurrentUser().roles;return a.every(function(a){return-1!==b.indexOf(a)})},this.hasAnyRoles=function(a){a=d(a);var b=this.getCurrentUser().roles;return a.some(function(a){return-1!==b.indexOf(a)})}}var b="X-Auth-Token";this.setAuthTokenHeader=function(a){b=a},this.$get=["authenticationService","userStorageService",function(b,c){return new a(b,c)}]})}();
//# sourceMappingURL=ua-security.min.map